<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on UKnowWhoIm</title><link>https://example.com/projects/</link><description>Recent content in Projects on UKnowWhoIm</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://example.com/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Chess Bot</title><link>https://example.com/projects/chess-bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/projects/chess-bot/</guid><description>Go to TLDR
I had done Multiplayer Chess as my school project, redid the same on django after learning it. Then I looked into chess programming. At first I was just curious, but I soon learned about MiniMax, Alpha Beta pruning, etc.
To test the waters, I made an AI for a simple game like Othello. After I successfully created a challenging AI for Othello, I proceeded to start doing it for Chess.</description></item><item><title>Django Test Action</title><link>https://example.com/projects/django-tests-action/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/projects/django-tests-action/</guid><description>This is a github action built using Docker to run your django tests to ensure that you don&amp;rsquo;t break existing stuff while making new changes
I made this project while working at QAPP, as we integrated tests into our codebase.</description></item><item><title>Members List Action</title><link>https://example.com/projects/members-list-action/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/projects/members-list-action/</guid><description>A college senior suggested an idea, to automatically create a list of members of a github organization.
At the time I didn&amp;rsquo;t know what a github action was, so I learned about github actions by doing this small project.
Doing this project allowed me to learn about Github Actions and Workflows, which are indispensable tools to have as a maintainer.</description></item><item><title>Multiplayer Chess</title><link>https://example.com/projects/chess/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/projects/chess/</guid><description>This is an online multiplayer chess game implemented using express.js, websockets, MongoDB and JS at its core.
I made this project as an entry for TinkerHub HireHack 2021, where it was placed in the top 5 projects.
I learned Express.js, Node and MongoDB while doing this project.</description></item><item><title>Student Benefits API</title><link>https://example.com/projects/student-mail-benefits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/projects/student-mail-benefits/</guid><description>This is an Open API containing many student discounts and offers. This was made using a mix of vanilla django and DRF.
Made this API once I realised that many students aren&amp;rsquo;t aware of the incredible amount of free stuff they&amp;rsquo;re eligible.</description></item><item><title>Whatsapp Telegram Bridge</title><link>https://example.com/projects/whatsapp-telegram-bridge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/projects/whatsapp-telegram-bridge/</guid><description>Go to TLDR
As the deadline for accepting WhatsApp&amp;rsquo;s new release was approaching, our class group was engaged in a heated discussion about moving to telegram. Many wanted to, but couldn&amp;rsquo;t as the official group containing teachers, would have to be in whatsapp, as the teachers had no interest in moving.
Seeing the argument getting nowhere, I saw a suggestion that if we could somehow bridge the apps, we could achieve the best of both worlds.</description></item></channel></rss>